{
    "swagger": "2.0",
    "info": {
        "description": "Documentation de l'API pour la gestion des kermesses scolaires avec fonctionnalités de stand, tombola, utilisateurs, etc.",
        "title": "Kermisys API Documentation",
        "contact": {
            "name": "Dr_AtsiSama",
            "url": "http://dratsisama.com",
            "email": "contact@dratsisama.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/forgot-password": {
            "post": {
                "description": "Envoie un lien de réinitialisation à l'utilisateur",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentification"
                ],
                "summary": "Mot de passe oublié",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Adresse e-mail",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/interact-stand": {
            "post": {
                "description": "Permet à un utilisateur d'interagir avec un stand spécifique (nourriture, boisson, activité, etc.)",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stands"
                ],
                "summary": "Interaction avec un stand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nom d'utilisateur",
                        "name": "username",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type de stand (ex: 'food', 'drink', 'activity')",
                        "name": "stand",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StandInteractionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authentifie un utilisateur et retourne un jeton JWT",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentification"
                ],
                "summary": "Connexion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nom d'utilisateur",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Mot de passe",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Déconnexion de l'utilisateur",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentification"
                ],
                "summary": "Déconnexion",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    }
                }
            }
        },
        "/payment": {
            "post": {
                "description": "Traite une demande de paiement en fonction des détails fournis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Paiement"
                ],
                "summary": "Processus de paiement",
                "parameters": [
                    {
                        "description": "Données de paiement",
                        "name": "paymentData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Crée un nouvel utilisateur",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentification"
                ],
                "summary": "Inscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nom d'utilisateur",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Mot de passe",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Adresse e-mail",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Rôle de l'utilisateur",
                        "name": "role",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "description": "Permet à un utilisateur de réinitialiser son mot de passe",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentification"
                ],
                "summary": "Réinitialiser le mot de passe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token de réinitialisation",
                        "name": "token",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nouveau mot de passe",
                        "name": "newPassword",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stands": {
            "get": {
                "description": "Récupère la liste de tous les stands",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stands"
                ],
                "summary": "Récupérer tous les stands",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Stand"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Ajoute un nouveau stand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stands"
                ],
                "summary": "Créer un stand",
                "parameters": [
                    {
                        "description": "Détails du stand",
                        "name": "stand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Stand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Stand"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stands/{id}": {
            "get": {
                "description": "Récupère un stand par son ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stands"
                ],
                "summary": "Récupérer un stand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du stand",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Stand"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Met à jour les détails d'un stand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stands"
                ],
                "summary": "Mettre à jour un stand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du stand",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Détails du stand",
                        "name": "stand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Stand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Stand"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Supprime un stand par son ID",
                "tags": [
                    "Stands"
                ],
                "summary": "Supprimer un stand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du stand",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Stand deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "description": "Renvoie les statistiques actuelles du système",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistiques"
                ],
                "summary": "Récupérer les statistiques",
                "responses": {
                    "200": {
                        "description": "Statistiques actuelles",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/stats/kermesse/{id}": {
            "get": {
                "description": "Récupère les statistiques de la kermesse par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistiques"
                ],
                "summary": "Obtenir les statistiques de la kermesse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la kermesse",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.KermesseStats"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stats/organisateur/{id}": {
            "get": {
                "description": "Récupère les statistiques de l'organisateur par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistiques"
                ],
                "summary": "Obtenir les statistiques de l'organisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'organisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OrganisateurStats"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stats/stand/{id}": {
            "get": {
                "description": "Récupère les statistiques d'un stand par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistiques"
                ],
                "summary": "Obtenir les statistiques d'un stand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du stand",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StandStats"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/buy": {
            "post": {
                "description": "Permet à un utilisateur d'acheter des jetons",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jetons"
                ],
                "summary": "Achat de jetons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nom d'utilisateur",
                        "name": "username",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Nombre de jetons à acheter",
                        "name": "amount",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BuyTokensResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/distribute": {
            "post": {
                "description": "Permet à un parent de distribuer des jetons à son enfant",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jetons"
                ],
                "summary": "Distribution de jetons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nom d'utilisateur du parent",
                        "name": "username",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nom d'utilisateur de l'enfant",
                        "name": "child",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Nombre de jetons à distribuer",
                        "name": "amount",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DistributeTokensResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tombola/buy": {
            "post": {
                "description": "Permet à un utilisateur d'acheter un billet de tombola",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tombola"
                ],
                "summary": "Acheter un billet de tombola",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nom d'utilisateur",
                        "name": "username",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BuyTombolaTicketResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tombola/draw": {
            "post": {
                "description": "Effectue le tirage de la tombola et retourne le gagnant",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tombola"
                ],
                "summary": "Tirage de la tombola",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DrawTombolaResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Crée un nouvel utilisateur avec le nom d'utilisateur, l'adresse e-mail, et le rôle spécifiés",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Utilisateurs"
                ],
                "summary": "Créer un nouvel utilisateur",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nom d'utilisateur",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Adresse e-mail",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Rôle de l'utilisateur (ex: 'parent', 'enfant', 'organisateur')",
                        "name": "role",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère les informations d'un utilisateur à partir de son nom d'utilisateur",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Utilisateurs"
                ],
                "summary": "Récupérer les détails d'un utilisateur",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nom d'utilisateur",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ws/private": {
            "get": {
                "description": "Établit une connexion WebSocket pour la discussion privée en temps réel entre un organisateur et un gérant de stand",
                "tags": [
                    "WebSocket"
                ],
                "summary": "WebSocket Chat Privé",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identifiant de l'utilisateur (ex : username)",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Switching Protocols\" - WebSocket handshake success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BuyTokensResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.BuyTombolaTicketResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.CreateUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.DistributeTokensResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.DrawTombolaResponse": {
            "type": "object",
            "properties": {
                "winner": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.Kermesse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.KermesseStats": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "kermesse_id": {
                    "type": "integer"
                },
                "total_participants": {
                    "type": "integer"
                },
                "total_revenue": {
                    "type": "number"
                },
                "total_tokens_used": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.OrganisateurStats": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "organisateur_id": {
                    "type": "integer"
                },
                "total_kermesses": {
                    "type": "integer"
                },
                "total_revenue": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.PaymentRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Montant à payer en centimes",
                    "type": "integer"
                },
                "currency": {
                    "description": "Devise (ex: 'EUR')",
                    "type": "string"
                },
                "description": {
                    "description": "Description du paiement",
                    "type": "string"
                },
                "source": {
                    "description": "Source de paiement (ex: un token de carte)",
                    "type": "string"
                }
            }
        },
        "models.PaymentResponse": {
            "type": "object",
            "properties": {
                "chargeID": {
                    "description": "L'identifiant du paiement",
                    "type": "string"
                }
            }
        },
        "models.Stand": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "kermesse": {
                    "description": "Associations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Kermesse"
                        }
                    ]
                },
                "kermesseID": {
                    "description": "Référence vers la Kermesse",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/models.User"
                },
                "ownerID": {
                    "description": "Référence vers le User qui tient le stand",
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.StandInteractionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.StandStats": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "items_sold": {
                    "type": "integer"
                },
                "revenue": {
                    "type": "number"
                },
                "stand_id": {
                    "type": "integer"
                },
                "total_tokens_used": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "passwordHash": {
                    "type": "string"
                },
                "resetToken": {
                    "description": "Token de réinitialisation",
                    "type": "string"
                },
                "resetTokenExpiry": {
                    "description": "Expiration du token de réinitialisation",
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}